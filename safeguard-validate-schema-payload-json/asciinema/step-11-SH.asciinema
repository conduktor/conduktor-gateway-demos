{"version": 2, "width": 140, "height": 20, "timestamp": 1705968985, "idle_time_limit": 2.0, "env": {"SHELL": "/bin/zsh", "TERM": null}, "title": "step-11-SH"}
[0.008634, "o", "\u001b[0;97m"]
[0.012038, "o", "cat invalid-payload."]
[0.207889, "o", "json | jq -c | \\\r\n   "]
[0.308024, "o", " kafka-json-schema-c"]
[0.404809, "o", "onsole-producer \\\r\n  "]
[0.495086, "o", "      --bootstrap-se"]
[0.594776, "o", "rver localhost:6969 "]
[0.686897, "o", "\\\r\n        --producer"]
[0.781426, "o", ".config teamA-sa.pro"]
[0.881335, "o", "perties \\\r\n        --"]
[0.978185, "o", "topic topic-json-sch"]
[1.069711, "o", "ema \\\r\n        --prop"]
[1.159538, "o", "erty schema.registry"]
[1.257023, "o", ".url=http://localhos"]
[1.357181, "o", "t:8081 \\\r\n        --p"]
[1.452925, "o", "roperty value.schema"]
[1.551759, "o", ".id=1"]
[1.553355, "o", "\u001b[0m\r\n"]
[2.241081, "o", "[2024-01-23 01:16:27,401] INFO KafkaJsonSchemaSerializerConfig values: \r\n\tauto.register.schemas = true\r\n\tbasic.auth.credentials.source = URL\r\n\tbasic.auth.user.info = [hidden]\r\n\tbearer.auth.cache.expiry.buffer.seconds = 300\r\n\tbearer.auth.client.id = null\r\n\tbearer.auth.client.secret = null\r\n\tbearer.auth.credentials.source = STATIC_TOKEN\r\n\tbearer.auth.custom.provider.class = null\r\n\tbearer.auth.identity.pool.id = null\r\n\tbearer.auth.issuer.endpoint.url = null\r\n\tbearer.auth.logical.cluster = null\r\n\tbearer.auth.scope = null\r\n\tbearer.auth.scope.claim.name = scope\r\n\tbearer.auth.sub.claim.name = sub\r\n\tbearer.auth.token = [hidden]\r\n\tcontext.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy\r\n\thttp.connect.timeout.ms = 60000\r\n\thttp.read.timeout.ms = 60000\r\n\tid.compatibility.strict = true\r\n\tjson.fail.invalid.schema = true\r\n\tjson.fail.unknown.properties = true\r\n\tjson.indent.output = false\r\n\tjson.oneof.for.nullables = true\r\n\tjson.schema.spec.version = draft_7\r\n\tjson.write.dates.iso8601 = fa"]
[2.241194, "o", "lse\r\n\tkey.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy\r\n\tlatest.cache.size = 1000\r\n\tlatest.cache.ttl.sec = -1\r\n\tlatest.compatibility.strict = true\r\n\tmax.schemas.per.subject = 1000\r\n\tnormalize.schemas = false\r\n\tproxy.host = \r\n\tproxy.port = -1\r\n\trule.actions = []\r\n\trule.executors = []\r\n\trule.service.loader.enable = true\r\n\tschema.format = null\r\n\tschema.reflection = false\r\n\tschema.registry.basic.auth.user.info = [hidden]\r\n\tschema.registry.ssl.cipher.suites = null\r\n\tschema.registry.ssl.enabled.protocols = [TLSv1.2, TLSv1.3]\r\n\tschema.registry.ssl.endpoint.identification.algorithm = https\r\n\tschema.registry.ssl.engine.factory.class = null\r\n\tschema.registry.ssl.key.password = null\r\n\tschema.registry.ssl.keymanager.algorithm = SunX509\r\n\tschema.registry.ssl.keystore.certificate.chain = null\r\n\tschema.registry.ssl.keystore.key = null\r\n\tschema.registry.ssl.keystore.location = null\r\n\tschema.registry.ssl.keystore.password = null\r\n\tschema.registry.ssl.keystore.type = JKS\r\n\tschema.regis"]
[2.241235, "o", "try.ssl.protocol = TLSv1.3\r\n\tschema.registry.ssl.provider = null\r\n\tschema.registry.ssl.secure.random.implementation = null\r\n\tschema.registry.ssl.trustmanager.algorithm = PKIX\r\n\tschema.registry.ssl.truststore.certificates = null\r\n\tschema.registry.ssl.truststore.location = null\r\n\tschema.registry.ssl.truststore.password = null\r\n\tschema.registry.ssl.truststore.type = JKS\r\n\tschema.registry.url = [http://localhost:8081]\r\n\tuse.latest.version = false\r\n\tuse.latest.with.metadata = null\r\n\tuse.schema.id = -1\r\n\tvalue.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy\r\n (io.confluent.kafka.serializers.json.KafkaJsonSchemaSerializerConfig:376)\r\n"]
[2.684938, "o", "org.apache.kafka.common.errors.SerializationException: Error serializing JSON message\r\n\tat io.confluent.kafka.serializers.json.AbstractKafkaJsonSchemaSerializer.serializeImpl(AbstractKafkaJsonSchemaSerializer.java:166)\r\n"]
[2.684965, "o", "\tat io.confluent.kafka.formatter.json.JsonSchemaMessageReader$JsonSchemaMessageSerializer.serialize(JsonSchemaMessageReader.java:167)\r\n\tat io.confluent.kafka.formatter.json.JsonSchemaMessageReader$JsonSchemaMessageSerializer.serialize(JsonSchemaMessageReader.java:130)\r\n\tat io.confluent.kafka.formatter.SchemaMessageReader.readMessage(SchemaMessageReader.java:406)\r\n\tat kafka.tools.ConsoleProducer$.main(ConsoleProducer.scala:50)\r\n"]
[2.68497, "o", "\tat kafka.tools.ConsoleProducer.main(ConsoleProducer.scala)\r\n"]
[2.685062, "o", "Caused by: org.apache.kafka.common.errors.SerializationException: Validation error in JSON {\"name\":\"D\",\"age\":17,\"email\":\"bad email\",\"address\":{\"street\":\"a way too lond adress that will not fit in your database\",\"city\":\"\"},\"hobbies\":[\"reading\"],\"friends\":[{\"name\":\"Tom\",\"age\":17},{\"name\":\"Emma\",\"age\":18}]}, Error report:\r\n{\r\n  \"schemaLocation\": \"#\",\r\n  \"pointerToViolation\": \"#\",\r\n  \"causingExceptions\": [\r\n    {\r\n      \"schemaLocation\": \"#/properties/address\",\r\n      \"pointerToViolation\": \"#/address\",\r\n      \"causingExceptions\": [\r\n        {\r\n          \"schemaLocation\": \"#/properties/address/properties/city\",\r\n          \"pointerToViolation\": \"#/address/city\",\r\n          \"causingExceptions\": [],\r\n          \"keyword\": \"minLength\",\r\n          \"message\": \"expected minLength: 2, actual: 0\"\r\n        },\r\n        {\r\n          \"schemaLocation\": \"#/properties/address/properties/street\",\r\n          \"pointerToViolation\": \"#/address/street\",\r\n          \"causingExceptions\": [],\r\n          \"keyword\": \"maxLength\",\r\n          \"m"]
[2.685072, "o", "essage\": \"expected maxLength: 15, actual: 56\"\r\n        }\r\n      ],\r\n      \"message\": \"2 schema violations found\"\r\n    },\r\n    {\r\n      \"schemaLocation\": \"#/properties/hobbies\",\r\n      \"pointerToViolation\": \"#/hobbies\",\r\n      \"causingExceptions\": [],\r\n      \"keyword\": \"minItems\",\r\n      \"message\": \"expected minimum item count: 2, found: 1\"\r\n    },\r\n    {\r\n      \"schemaLocation\": \"#/properties/name\",\r\n      \"pointerToViolation\": \"#/name\",\r\n      \"causingExceptions\": [],\r\n      \"keyword\": \"minLength\",\r\n      \"message\": \"expected minLength: 3, actual: 1\"\r\n    },\r\n    {\r\n      \"schemaLocation\": \"#/properties/email\",\r\n      \"pointerToViolation\": \"#/email\",\r\n      \"causingExceptions\": [],\r\n      \"keyword\": \"format\",\r\n      \"message\": \"[bad email] is not a valid email address\"\r\n    }\r\n  ],\r\n  \"message\": \"5 schema violations found\"\r\n}\r\n"]
[2.68508, "o", "\tat io.confluent.kafka.serializers.json.AbstractKafkaJsonSchemaSerializer.validateJson(AbstractKafkaJsonSchemaSerializer.java:189)\r\n"]
[2.685196, "o", "\tat io.confluent.kafka.serializers.json.AbstractKafkaJsonSchemaSerializer.serializeImpl(AbstractKafkaJsonSchemaSerializer.java:154)\r\n\t... 5 more\r\nCaused by: org.everit.json.schema.ValidationException: #: 5 schema violations found\r\n\tat org.everit.json.schema.ValidationException.copy(ValidationException.java:486)\r\n\tat org.everit.json.schema.DefaultValidator.performValidation(Validator.java:76)\r\n\tat org.everit.json.schema.Schema.validate(Schema.java:152)\r\n\tat io.confluent.kafka.schemaregistry.json.JsonSchema.validate(JsonSchema.java:441)\r\n\tat io.confluent.kafka.schemaregistry.json.JsonSchema.validate(JsonSchema.java:409)\r\n\tat io.confluent.kafka.serializers.json.AbstractKafkaJsonSchemaSerializer.validateJson(AbstractKafkaJsonSchemaSerializer.java:179)\r\n\t... 6 more\r\n"]
