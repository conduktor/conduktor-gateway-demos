version: '3.8'
services:
  kdc:
    hostname: kdc.kerberos-demo.local
    build: kdc/
    container_name: kdc
    volumes:
      - ./security:/etc/kafka/secrets 
    healthcheck:
      test: nc -zv kdc 88 || exit 1
      interval: 10s
      retries: 25
      start_period: 20s  

  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper.kerberos-demo.local
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: "1"
      ZOOKEEPER_CLIENT_PORT: 2181
      #ZOOKEEPER_SERVERS: zookeeper:2888:3888
      ZOOKEEPER_4LW_COMMANDS_WHITELIST: "*"
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/zookeeper_server_jaas.conf 
        -Djava.security.krb5.conf=/etc/krb5.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dsun.security.krb5.debug=true
        -Dzookeeper.allowSaslFailedClients=false
        -Dzookeeper.requireClientAuthScheme=sasl
    volumes:
      - ./kdc/krb5.conf:/etc/krb5.conf
      - ./security:/etc/kafka/secrets
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      retries: 20
      interval: 10s       

  kafka-1:
    image: confluentinc/cp-kafka
    hostname: kafka-1
    container_name: kafka-1
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper.kerberos-demo.local:2181"
      KAFKA_LISTENERS: "SASL_SSL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "SASL_SSL://kafka-1.kerberos-demo.local:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "SASL_SSL:SASL_SSL"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_BROKER_ID: "1"
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/kafka-1_server_jaas.conf 
        -Djava.security.krb5.conf=/etc/krb5.conf
        -Dsun.security.krb5.debug=true 
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      # Kerberos / GSSAPI Authentication mechanism
      KAFKA_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_SASL_KERBEROS_SERVICE_NAME: kafka
       # Configure replication to require Kerberos:
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      KAFKA_INTER_BROKER_LISTENER_NAME: SASL_SSL
      # Authorization config:
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ZOOKEEPER_SET_ACL: "true"
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
      KAFKA_SUPER_USERS: User:admin;User:kafka;User:schemaregistry;User:connect
      KAFKA_SSL_CLIENT_AUTH: requested
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-1.kerberos-demo.local.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-1.kerberos-demo.local_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-1.kerberos-demo.local_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-1.kerberos-demo.local.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-1.kerberos-demo.local_truststore_creds
    volumes:
    - ./security:/etc/kafka/secrets
    - ./../jmx-exporter:/usr/share/jmx_exporter/
    - ./kdc/krb5.conf:/etc/krb5.conf
    healthcheck:
      test: nc -zv kafka-1 9092 || exit 1
      interval: 10s
      retries: 25
      start_period: 20s
    depends_on:
      zookeeper:
        condition: service_healthy

  kafka-2:
    image: confluentinc/cp-kafka
    hostname: kafka-2
    container_name: kafka-2
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper.kerberos-demo.local:2181"
      KAFKA_LISTENERS: "SASL_SSL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "SASL_SSL://kafka-2.kerberos-demo.local:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "SASL_SSL:SASL_SSL"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_BROKER_ID: "2"
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/kafka-2_server_jaas.conf 
        -Djava.security.krb5.conf=/etc/krb5.conf
        -Dsun.security.krb5.debug=true 
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      # Kerberos / GSSAPI Authentication mechanism
      KAFKA_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_SASL_KERBEROS_SERVICE_NAME: kafka
      # Configure replication to require Kerberos:
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      KAFKA_INTER_BROKER_LISTENER_NAME: SASL_SSL
      # Authorization config:
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ZOOKEEPER_SET_ACL: "true"
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
      KAFKA_SUPER_USERS: User:admin;User:kafka;User:schemaregistry;User:connect
      KAFKA_SSL_CLIENT_AUTH: requested
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-2.kerberos-demo.local.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-2.kerberos-demo.local_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-2.kerberos-demo.local_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-2.kerberos-demo.local.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-2.kerberos-demo.local_truststore_creds
    volumes:
    - ./security:/etc/kafka/secrets
    - ./../jmx-exporter:/usr/share/jmx_exporter/
    - ./kdc/krb5.conf:/etc/krb5.conf
    healthcheck:
      test: nc -zv kafka-2 9092 || exit 1
      interval: 10s
      retries: 25
      start_period: 20s
    depends_on:
      zookeeper:
        condition: service_healthy    
 
  kafka-3:
    image: confluentinc/cp-kafka
    hostname: kafka-3
    container_name: kafka-3
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper.kerberos-demo.local:2181"
      KAFKA_LISTENERS: "SASL_SSL://kafka-3.kerberos-demo.local:9092"
      KAFKA_ADVERTISED_LISTENERS: "SASL_SSL://kafka-3.kerberos-demo.local:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "SASL_SSL:SASL_SSL"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_BROKER_ID: "3"
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/kafka-3_server_jaas.conf 
        -Djava.security.krb5.conf=/etc/krb5.conf
        -Dsun.security.krb5.debug=true 
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      # Kerberos / GSSAPI Authentication mechanism
      KAFKA_SASL_ENABLED_MECHANISMS: GSSAPI
      KAFKA_SASL_KERBEROS_SERVICE_NAME: kafka
      # Configure replication to require Kerberos:
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
      KAFKA_INTER_BROKER_LISTENER_NAME: SASL_SSL
      # Authorization config:
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ZOOKEEPER_SET_ACL: "true"
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
      KAFKA_SUPER_USERS: User:admin;User:kafka;User:schemaregistry;User:connect   
      KAFKA_SSL_CLIENT_AUTH: requested
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.kafka-3.kerberos-demo.local.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-3.kerberos-demo.local_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-3.kerberos-demo.local_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-3.kerberos-demo.local.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-3.kerberos-demo.local_truststore_creds

    volumes:
    - ./security:/etc/kafka/secrets
    - ./../jmx-exporter:/usr/share/jmx_exporter/
    - ./kdc/krb5.conf:/etc/krb5.conf
    healthcheck:
      test: nc -zv kafka-3 9092 || exit 1
      interval: 10s
      retries: 25
      start_period: 20s
    depends_on:
      zookeeper:
        condition: service_healthy

  gateway:
    image: ghcr.io/conduktor/conduktor-gateway-distro
    hostname: gateway
    container_name: gateway
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka-1.kerberos-demo.local:9092,kafka-2.kerberos-demo.local:9092,kafka-3.kerberos-demo.local:9092
      KAFKA_SASL_JAAS_CONFIG: com.sun.security.auth.module.Krb5LoginModule required useKeyTab=true storeKey=true keyTab="/etc/kafka/secrets/kafka-admin.keytab" principal="admin/for-kafka@TEST.CONDUKTOR.IO";
      KAFKA_SASL_MECHANISM: GSSAPI
      KAFKA_SECURITY_PROTOCOL: SASL_SSL
      KAFKA_SASL_KERBEROS_SERVICE_NAME: kafka
      KAFKA_SSL_TRUSTSTORE_TYPE: JKS
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.kafka-1.kerberos-demo.local.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: conduktor

      GATEWAY_SECURITY_PROTOCOL: SASL_PLAINTEXT
      GATEWAY_FEATURE_FLAGS_SINGLE_TENANT: true
      GATEWAY_FEATURE_FLAGS_MULTI_TENANCY: true
    volumes:
      - ./security:/etc/kafka/secrets
      - ./kdc/krb5.conf:/etc/krb5.conf
    healthcheck:
      test: curl localhost:8888/health
      start_period: 10s
      interval: 5s
      retries: 25
    depends_on:
      kafka-1:
        condition: service_healthy
      kafka-2:
        condition: service_healthy
      kafka-3:
        condition: service_healthy

  cli-kafka:
    image: confluentinc/cp-kafka
    hostname: cli-kafka
    container_name: cli-kafka
    volumes:
      - ./security:/etc/kafka/secrets
      - ./kdc/krb5.conf:/etc/krb5.conf
    command: sleep infinity

networks:
  default:
    name: kerberos-demo.local