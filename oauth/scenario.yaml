title: Oauth
tag: security
ciTags:
  - PULL_REQUEST
  - NON_REGRESSION
services:
  kafka1:
    properties:
      bootstrap.servers: localhost:19092,localhost:19093,localhost:19094
  kafka2:
    properties:
      bootstrap.servers: localhost:19092,localhost:19093,localhost:19094
  kafka3:
    properties:
      bootstrap.servers: localhost:19092,localhost:19093,localhost:19094
  gateway1:
    docker:
      environment:
        GATEWAY_MODE: GATEWAY_SECURITY
        GATEWAY_OAUTH_JWKS_URL: "http://keycloak:18080/realms/conduktor/protocol/openid-connect/certs"
        GATEWAY_OAUTH_EXPECTED_ISSUER: "http://keycloak:18080/realms/conduktor"
    properties:
      bootstrap.servers: localhost:6969
      gateway.host: http://localhost:8888
  gateway2:
    docker:
      environment:
        GATEWAY_MODE: GATEWAY_SECURITY
        GATEWAY_OAUTH_JWKS_URL: "http://keycloak:18080/realms/conduktor/protocol/openid-connect/certs"
        GATEWAY_OAUTH_EXPECTED_ISSUER: "http://keycloak:18080/realms/conduktor"
    properties:
      bootstrap.servers: localhost:6969
      gateway.host: http://localhost:8889
  keycloack:
    docker:
      image: quay.io/keycloak/keycloak:22.0
      hostname: keycloak
      container_name: keycloak
      ports:
        - 18080:18080
      environment:
        KEYCLOAK_ADMIN: admin
        KEYCLOAK_ADMIN_PASSWORD: admin
      command:
        - start-dev
        - --http-port 18080
        - --hostname=keycloak
        - --metrics-enabled=true
        - --health-enabled=true
        - --import-realm
      volumes:
        - type: bind
          source: conduktor-realm.json
          target: /opt/keycloak/data/import/realm.json
          read_only: true

actions:
  - type: INTRODUCTION
    title: What is OAuth
    markdown: |
      You can be using OAuth instead of SASL_SSL  

  - type: ASCIINEMA

  - type: FILE
    filename: docker-compose.yaml

  - type: DOCKER
    command: docker compose up --detach --wait

  - type: FILE
    title: Review the kafka properties to connect using OAuth
    filename: user-1.properties

  - type: CREATE_TOPICS
    kafka: gateway1
    kafkaConfig: user-1.properties
    topics:
      - name: cars
        replicationFactor: 1
        partitions: 1

  - type: LIST_TOPICS
    kafka: gateway1
    kafkaConfig: user-1.properties
    assertExists:
      - cars

  - type: DOCKER
    command: docker compose down --volumes

  - type: CONCLUSION
    markdown: |
      OAuth is your next security protocol!
