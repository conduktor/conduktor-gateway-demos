version: '3.7'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_REPLICATION_FACTOR: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN

  kafka2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_REPLICATION_FACTOR: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN

  conduktor-gateway:
    image: ghcr.io/conduktor/conduktor-proxy:2.0.1.tomDev
    hostname: conduktor-gateway
    container_name: conduktor-gateway
    depends_on:
      - kafka1
    ports:
      - "6969:6969"
      - "6970:6970"
      - "9999:9999"
      - "8888:8888"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka1:9092
      GATEWAY_SECURITY_PROTOCOL: SASL_PLAINTEXT
      GATEWAY_USER_POOL_TYPE: JWT
      GATEWAY_USER_POOL_SECRET_KEY: OaM4lG+xO5Gz10GB1apZ2XDUuWw/sK1H+XXcgExpYm2YEHgnvEf63q9TJraebD3SQb/JzefcZkUEKz/8V5V+Fg==
      GATEWAY_HOST: conduktor-gateway
      GATEWAY_INTERCEPTOR_CONFIG_LOCATION: "~"
      GATEWAY_FEATURE_FLAGS_MULTI_TENANCY: true
      GATEWAY_FEATURE_FLAGS_INTERNAL_LOAD_BALANCING: false
      GATEWAY_FEATURE_FLAGS_AUDIT: false
      GATEWAY_ADMIN_API_USERS: "[{username: superUser, password: superUser, admin: true}]"
      JAVA_TOOL_OPTIONS: -Dcom.sun.management.jmxremote.port=9999 -Dcom.sun.management.jmxremote.rmi.port=9999 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1

  kafka-client:
    image: confluentinc/cp-kafka:latest
    hostname: kafka-client
    container_name: kafka-client
    command: sleep infinity
    volumes:
      - type: bind
        source: "./clientConfig"
        target: /clientConfig
        read_only: true


  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:latest
    hostname: ksqldb-server
    container_name: ksqldb-server
    ports:
      - 8088:8088
    environment:
      KSQL_LOG4J_ROOT_LOGLEVEL: DEBUG

      KSQL_KSQL_SERVICE_ID: "ksql-cluster"
      KSQL_KSQL_STREAMS_REPLICATION_FACTOR: 1
      KSQL_KSQL_INTERNAL_TOPIC_REPLICAS: 1

      # For Demo purposes: improve resource utilization and avoid timeouts
      KSQL_KSQL_STREAMS_NUM_STREAM_THREADS: 1

      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/clientConfig/log4j.properties"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'

      KSQL_PRODUCER_ENABLE_IDEMPOTENCE: 'true'

      KSQL_BOOTSTRAP_SERVERS: conduktor-gateway:6969
      KSQL_HOST_NAME: ksqldb-server
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0

      # Enable OAuth for ksqlDB's embedded Kafka clients that access and manage consumer groups and topics
      KSQL_SECURITY_PROTOCOL: SASL_PLAINTEXT
      KSQL_SASL_MECHANISM: PLAIN
      KSQL_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required \
        username="someCluster" \
        password="eyJhbGciOiJIUzUxMiJ9.eyJ1c2VybmFtZSI6InNvbWVDbHVzdGVyIiwidGVuYW50Ijoic29tZUNsdXN0ZXIiLCJleHAiOjE3MDcwMzkyMjB9.0CUgn0OLOrfl6U6-rHgeuYBOy4qQnxo0zPn9o6N_GV-m95LBfPodSjU5-CkUzUU1sZf20hTAKtoPDaAQMUyPKQ";
    volumes:
      - type: bind
        source: "./clientConfig"
        target: /clientConfig
        read_only: true

  ksqldb-server-real:
    image: confluentinc/cp-ksqldb-server:latest
    hostname: ksqldb-server-real
    container_name: ksqldb-server-real
    environment:
      KSQL_LOG4J_ROOT_LOGLEVEL: DEBUG

      KSQL_KSQL_SERVICE_ID: "ksql-cluster-real"
      KSQL_KSQL_STREAMS_REPLICATION_FACTOR: 1
      KSQL_KSQL_INTERNAL_TOPIC_REPLICAS: 1

      # For Demo purposes: improve resource utilization and avoid timeouts
      KSQL_KSQL_STREAMS_NUM_STREAM_THREADS: 1

      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/clientConfig/log4j.properties"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'

      KSQL_PRODUCER_ENABLE_IDEMPOTENCE: 'true'

      KSQL_BOOTSTRAP_SERVERS: kafka1:9092
      KSQL_HOST_NAME: ksqldb-server-real
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0

      # Enable OAuth for ksqlDB's embedded Kafka clients that access and manage consumer groups and topics
      KSQL_SECURITY_PROTOCOL: PLAINTEXT
    volumes:
      - type: bind
        source: "./clientConfig"
        target: /clientConfig
        read_only: true